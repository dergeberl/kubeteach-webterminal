name: new-version

on:
  schedule:
  - cron:  '0 8 1 * *'


jobs:
  new-tag:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
    - uses: actions/checkout@v3
    - uses: oprypin/find-latest-tag@v1
      with:
        repository: ${{ github.repository }}
        releases-only: false  
      id: previoustag  
    - name: checkout tag
      uses: actions/checkout@v3
      with:
        ref: ${{ steps.previoustag.outputs.tag }}
    - name: get sha from commit
      id: tagcommitsha
      run: echo "sha=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT
    - name: 'Get next patch version'
      id: semvers
      uses: "WyriHaximus/github-action-next-semvers@v1"
      with:
        version: ${{ steps.previoustag.outputs.tag }}
    - name: New Version
      run: echo v${{ steps.semvers.outputs.patch }}
    - name: Create tag
      uses: actions/github-script@v6
      with:
        github-token: ${{ secrets.REGISTRY }}
        script: |
          github.rest.git.createRef({
            owner: context.repo.owner,
            repo: context.repo.repo,
            ref: "refs/tags/v${{ steps.semvers.outputs.patch }}",
            sha: "${{ steps.tagcommitsha.outputs.sha }}"
          })
    - name: Create Release
      uses: ncipollo/release-action@v1
      env:
        GITHUB_TOKEN: ${{ secrets.REGISTRY }}
      with:
        tag: v${{ steps.semvers.outputs.patch }}
        name: Release v${{ steps.semvers.outputs.patch }}
        body: |
          This is an automatic release to update the packages inside the container.
        draft: false
        prerelease: false